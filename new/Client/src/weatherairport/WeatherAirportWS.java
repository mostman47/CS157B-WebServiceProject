
package weatherairport;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WeatherAirportWS", targetNamespace = "http://WeatherAirport/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WeatherAirportWS {


    /**
     * 
     * @param country
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAirportInfoByCountry", targetNamespace = "http://WeatherAirport/", className = "weatherairport.GetAirportInfoByCountry")
    @ResponseWrapper(localName = "getAirportInfoByCountryResponse", targetNamespace = "http://WeatherAirport/", className = "weatherairport.GetAirportInfoByCountryResponse")
    @Action(input = "http://WeatherAirport/WeatherAirportWS/getAirportInfoByCountryRequest", output = "http://WeatherAirport/WeatherAirportWS/getAirportInfoByCountryResponse")
    public String getAirportInfoByCountry(
        @WebParam(name = "country", targetNamespace = "")
        String country);

    /**
     * 
     * @param country
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CitiesOfCountry")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CitiesOfCountry", targetNamespace = "http://WeatherAirport/", className = "weatherairport.CitiesOfCountry")
    @ResponseWrapper(localName = "CitiesOfCountryResponse", targetNamespace = "http://WeatherAirport/", className = "weatherairport.CitiesOfCountryResponse")
    @Action(input = "http://WeatherAirport/WeatherAirportWS/CitiesOfCountryRequest", output = "http://WeatherAirport/WeatherAirportWS/CitiesOfCountryResponse")
    public String citiesOfCountry(
        @WebParam(name = "country", targetNamespace = "")
        String country);

    /**
     * 
     * @param city
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAirportInfoByCity", targetNamespace = "http://WeatherAirport/", className = "weatherairport.GetAirportInfoByCity")
    @ResponseWrapper(localName = "getAirportInfoByCityResponse", targetNamespace = "http://WeatherAirport/", className = "weatherairport.GetAirportInfoByCityResponse")
    @Action(input = "http://WeatherAirport/WeatherAirportWS/getAirportInfoByCityRequest", output = "http://WeatherAirport/WeatherAirportWS/getAirportInfoByCityResponse")
    public String getAirportInfoByCity(
        @WebParam(name = "City", targetNamespace = "")
        String city);

    /**
     * 
     * @param city
     * @param country
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetWeatherOfCity")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetWeatherOfCity", targetNamespace = "http://WeatherAirport/", className = "weatherairport.GetWeatherOfCity")
    @ResponseWrapper(localName = "GetWeatherOfCityResponse", targetNamespace = "http://WeatherAirport/", className = "weatherairport.GetWeatherOfCityResponse")
    @Action(input = "http://WeatherAirport/WeatherAirportWS/GetWeatherOfCityRequest", output = "http://WeatherAirport/WeatherAirportWS/GetWeatherOfCityResponse")
    public String getWeatherOfCity(
        @WebParam(name = "country", targetNamespace = "")
        String country,
        @WebParam(name = "city", targetNamespace = "")
        String city);

}
